name: Deploy to GitHub Pages
on:
  push:
    branches: [main]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: Build application with Node.js
    runs-on: ubuntu-latest

    steps:
      - name: 🛎️ Checkout Repository
        uses: actions/checkout@v4

      - name: 📁 Get Yarn Cache Directory
        id: yarn-cache-dir
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: ☁️ Cache Yarn
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-dir.outputs.dir }}
          key: node-cache-${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            node-cache-${{ runner.os }}-yarn-

      - name: ⚙️ Setup Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: 🔧 Install Dependencies
        run: yarn install --frozen-lockfile

      - name: 🏗️ Build Application
        run: yarn build

      - name: ☁️ Upload Artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./dist

  deploy:
    name: Deploy application to GitHub Pages
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
